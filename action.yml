name: 'Lambda Action'
description: 'Validade , build and deploy AWS Lambdas'
inputs:
  team:  # id of input
    description: 'The name of the team. egg: backend, frontend, growth'
    required: true
  spreadsheet_id:
    description: 'The id of spreadsheet to send the lint data'
    required: true
  eslint_project_list:
    description: 'A list of subproject separated by comma. If it is just one project on root dir, use just one `.`'
    required: true
  ignore_lint_errors:
    description: 'In case of the project has many errors, turning not viable fix all now, change this value to not break the build'
    required: false
    default: false
  project_name:
    description: 'The name used in the spreadsheet'
    required: true
  google_service_account_email:
    description: 'The email of google service account'
    required: true
  google_private_key:
    require: true
    type: string
  serverless_deployment_bucket:
    required: true
  aws_access_key_id:
    required: true
  aws_secret_access_key:
    required: true
  slack_webhook:
    required: true


outputs:
  errors:
    description: 'The number of errors in this project'
    value: ${{ steps.random-number-generator.outputs.random-id }}

runs:
  using: "composite"
  steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Run npm install for the list of projects
        env:
          PROJECT_LIST: ${{ inputs.project_list }}
        run: ./install.sh
        shell: bash

      - name: 'Run eslint and send data to collector'
        continue-on-error: ${{ inputs.ignore_lint_errors }}
        uses: edgardleal/code-quality-to-spreadsheet-action@main
        env:
          DEBUG: 'eslint-collector*'
        with:
          spreadsheet_id: ${{ inputs.spreadsheet_id }}
          google_service_account_email: ${{ inputs.google_service_account_email }}
          google_private_key: ${{ inputs.google_private_key }}
          eslint_project_list: ${{ inputs.eslint_project_list }}
          project_name: ${{ inputs.project_name }}

      - name: Run tests
        run: ./tests.sh
        shell: bash


      - name: DEV Deployment
        if: contains(github.ref, 'develop')
        env:
          SERVERLESS_DEPLOYMENT_BUCKET: ${{ inputs.serverless_deployment_bucket }}
          AWS_ACCESS_KEY_ID: ${{ inputs.lambda_deployment_key }}
          AWS_SECRET_ACCESS_KEY: ${{ inputs.lambda_deployment_secret }}
          ENV: dev
        run: ./deploy.sh
        shell: bash

      - name: PRD Deployment
        if: contains(github.ref, 'main') || contains(github.ref, 'master')
        env:
          SERVERLESS_DEPLOYMENT_BUCKET: ${{ inputs.SERVERLESS_DEPLOYMENT_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ inputs.LAMBDA_DEPLOYMENT_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ inputs.LAMBDA_DEPLOYMENT_SECRET }}
          ENV: prd
        run: ./deploy.sh
        shell: bash

      - name: Slack Notification
        if: contains(github.ref, 'master') || contains(github.ref, 'main') || contains(github.ref, 'develop')
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: eng-releases
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
          SLACK_ICON: https://img.icons8.com/small/452/github.png
          SLACK_MESSAGE: ${{ github.event.head_commit.message }}
          SLACK_TITLE: ${{ inputs.project_name }}
          SLACK_USERNAME: GithubAction
          SLACK_WEBHOOK: ${{ inputs.slack_webhook }}

